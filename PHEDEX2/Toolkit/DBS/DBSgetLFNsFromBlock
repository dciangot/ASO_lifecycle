#!/usr/bin/env python
#
# List files in blocks from DBS2

import sys
from fnmatch import filter
import re
from string import lstrip, join

def dbs2Lookup(url, item, verbose, filesize):
  from DBSAPI.dbsApi import DbsApi

  myargs = { 'url': url,
             'version': 'DBS_1_0_7' }

  api = DbsApi(myargs)

  for file in api.listFiles(blockName=item):
    output="LFN=" + file['LogicalFileName']
    if filesize:
      output+=",size=" + str(file['FileSize'])
    print output

from optparse import OptionParser

try:
  usage =  "usage: %prog [options]\n"
  usage += "\nTakes a DBS URL and a block name and prints the list of LFNs it contains"
  usage += "\nYou will probably want to put the arguments in quotes to prevent the shell from interpreting them"
  parser = OptionParser(usage=usage)
  parser.add_option('-u', '--url', dest='url', help='DBS URL')
  parser.add_option('-d', '--block', dest='item', help='Block name')
  parser.add_option('-v', '--verbose', action="store_true",
                    default=False,
                    dest='verbose', help='Verbose output')
  parser.add_option('-s', '--size', action="store_true",
                    default=False,
                    dest='filesize', help='Print file size')
  (opts, args) = parser.parse_args()
  if not opts.url or not opts.item:
    raise Exception("Options --url and --data_item are required")

  dbs2Lookup(opts.url, opts.item, opts.verbose, opts.filesize)
    
  sys.exit(0)
except Exception, ex:
    print "Caught Exception object: %s "  % ex
