#!/bin/sh

if [ "x$2" == "x" ]; then
cat << EOF
Usage: CreateFile <nr> <outfile_base> <copy_script_name> (<nonhex>)

  <nr> - Output file number to create i.e. 00, 01, 10, 1F, DC, ...
  <outfile_bases> - Output filename base. i.e. LoadTest07_YOURSITE_ or LoadTest07_RAL_ or ...
  <copy_script_name> -  Name of the file copy script, choose which one fits your environment
			or write your own. It is given the filename to be copied from current 
			working directory
  <nonhex> - if this argument is present (what ever it is) the number <nr> is assumed to be 
             in base 10 from 0 to 255, the conversion to hex is done automatically then

Example:

  ./CreateFile D5 LoadTest07_YOURSITE_ srm.sh
  ./CreateFile 213 LoadTest07_YOURSITE_ srm.sh anything
  ./CreateFile 213 LoadTest07_YOURSITE_ srm.sh 0

The script creates the actual LoadTest file, a file which will contain the injection info and will
try to copy the LoadTest file to storage also using the supplied copy script. The name of the injection
data file is LoadTest07_files_info_<nr> where the <nr> is the same number as given as input (unconverted).
EOF
exit
fi

if [ "x$4" == "x" ]; then
  FN=$1;
else 
  FN=`echo "obase=16; $1"|bc`;
  if [ $1 -lt 17 ]; then FN=0$FN; fi;
fi

OUTFBASE=$2;
COPY=$3

# Creating seed file of size 1MB
dd if=/dev/urandom of=seed bs=1k count=1024 >/dev/null 2>&1

# Just in case remove the output file first
rm -f ${OTFBASE}{$FN};

# Create the 2.5GB file
for i in `seq 2560`; do cat seed >> ${OUTFBASE}${FN}; done
rm -f seed;

# create the info for checksumming
echo "$FN," ` cksum ${OUTFBASE}${FN} | sed 's/[^0-9][^0-9]*/,/' | sed -e s+${OUTFBASE}${FN}++g` > LoadTest07_files_info_$1

# Copy the loadtest file into storage
chmod 755 $COPY
./$COPY ${OUTFBASE}${FN}
EC=$?

if [ $EC -ne 0 ]; then
   # An error occured during copy, will try once more, then die
   ./$COPY ${OUTFBASE}${FN}
   
   if [ $? -eq 0 ]; then EC=0; fi
fi

# Cleanup
rm -f ${OUTFBASE}${FN}

# What is left at this point is just the injection file
exit $EC
