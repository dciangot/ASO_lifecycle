# Apache directives for running examples

# Load the perl module
<IfModule !perl_module>
  LoadModule perl_module /data/egeland/phedex/datasvc/dev1/sw/slc4_amd64_gcc345/external/mod_perl2/2.0.3-cmp12/modules/mod_perl.so
</IfModule>

<IfModule prefork.c>
  StartServers         8
  MinSpareServers      5
  MaxSpareServers      5
  ServerLimit          10
  MaxClients           10
  MaxRequestsPerChild  4000
</IfModule>

Listen 7002
<VirtualHost *:7002>
  DocumentRoot /data/egeland/phedex/datasvc/dev1/sw/slc4_amd64_gcc345/cms/PHEDEX-datasvc/DATASVC_1_5_2/PhEDExWeb/DataService

  # We typically run in a reverse-proxy mode with an explicit list of
  # machine which we allow access from listed both here and in the machine
  # firewall settings.  Uncomment or add the machines below which
  # should be permitted to access this service.
  <Location / >
    Order allow,deny
    Allow from vocms33.cern.ch
    Allow from localhost
  </Location>

  #  Logging.  We expect to be in a reverse-proxy setup, so we will
  #  alter our log format so it doesn't appear as if every access came from
  #  the front-end
  LogLevel warn
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b" common
  LogFormat "%{Referer}i -> %U" referer
  LogFormat "%{User-agent}i" agent
  ErrorLog  "|rotatelogs -f /data/egeland/phedex/datasvc/dev1/sw/apache2/logs/phedex_datasvc_error_log_%Y%m%d 86400"
  CustomLog "|rotatelogs -f /data/egeland/phedex/datasvc/dev1/sw/apache2/logs/phedex_datasvc_access_log_%Y%m%d 86400" combined

  PerlPassEnv ORACLE_HOME
  PerlPassEnv TNS_ADMIN
  PerlPassEnv LD_LIBRARY_PATH

  PerlInitHandler Apache2::Reload
  PerlCleanupHandler Apache2::SizeLimit

  <Perl>
#!/usr/bin/env perl

BEGIN {
    use strict; use warnings; $^W=1; use Config;
}

# Generic mod_perl stuff
use ModPerl::Util ();
use Apache2::RequestRec ();
use Apache2::RequestIO ();
use Apache2::RequestUtil ();
use Apache2::ServerRec qw(warn);
use Apache2::ServerUtil ();
use Apache2::Connection ();
use Apache2::Log ();
# use APR::Table ();
# use ModPerl::Registry ();
use Apache2::Reload ();
use Apache2::Const -compile => ':common';
use APR::Const -compile => ':common';

# App specific stuff
# use CGI ();
use Apache::DBI;
use DBD::Oracle;
use Apache2::SizeLimit;
$Apache2::SizeLimit::MAX_PROCESS_SIZE  = 400000; # 400 MB

use PHEDEX::Web::Core;

1;
  </Perl>

<Location /phedex/datasvc/test/rocks >
  SetHandler perl-script
  PerlResponseHandler  PHEDEX::Testbed::ModPerl::Rocks
</Location>

<Location /phedex/datasvc/examples/* >
  SetHandler perl-script
  PerlResponseHandler  PHEDEX::Testbed::ModPerl::Examples
</Location>

</VirtualHost>
