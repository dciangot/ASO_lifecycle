# This is used if I am recording to monalisa with the T0 components. I'm not...
%T0::System =
(
  Name	=> 'Validation',
);

# This is where it all happens...
%PhEDEx::Lifecycle =
(
  Quiet		=> 0,
  Verbose	=> 1,
  Debug		=> 0,
  Dummy		=> 0,    # Don't update TMDB, just run the framework
  StopOnIdle	=> 1,    # Not yet implemented...
  DoInjection	=> 1,    # Set to 1 to run, to 0 to drain.
  Jitter	=> 0.1,  # To spread things out a bit
  CycleSpeedup	=>    1, # speed up time.

  Dataflow =>
  {
#   These are arrays of POE events in Lifecycle.pm, and reflect the workflow
#   for different types of data.
    'EXPRESS'  => [ 'inject', 't1subscribe' ],
    'RAW'      => [ 'inject', 't1subscribe' ],
    'RECO'     => [ 'inject', 't1subscribe' ],
    'AOD'      => [ 'inject', 't1subscribe', 't2subscribe', 't2delete' ],
    'MC'       => [ 'inject', 't1subscribe', 'srcdelete' ], 

    'INJC'     => [ 'inject' ], # Only injection, for testing...
  },

  DataflowDefaults =>
  {
#   Default parameters for each workflow. These override global defaults, but
#   are overridden by values in the specific dataflow instance.
#   Typically, set CycleTime and NFiles, based on the expectations from the
#   computing model in question. These values assume 8 primary physics
#   datasets and a total DAQ rate of 350 MB/sec raw data.

    'RAW' =>
    {
      Priority	=>     3,
      CycleTime	=>  7200,
      NFiles	=>   150,
    },
    'RECO' =>
    {
      Priority	=>     2,
      CycleTime	=>  7200,
      NFiles	=>    30,
    },
    'AOD' =>
    {
      Priority	=>     2,
      CycleTime	=>  7200,
      NFiles	=>    15,
      T1s => [ 'T1_002_MSS', 'T1_003_MSS', 'T1_004_MSS', 'T1_005_MSS',
	       'T1_006_MSS', 'T1_007_MSS', 'T1_008_MSS', 'T1_009_MSS', ],
      t2delete	=>  7200,
    },
    'MC' =>
    {
      Priority	=>      1,
      CycleTime	=>   7200,
      NFiles	=>    150,
      srcdelete	=>   7200,
    },
    'EXPRESS' =>
    {
# Express stream is ~10% of the data, is RECO, and goes to all T1s. Block on
# the same cycles as RECO, set it to be high priority.
      Priority	=>    5,
      CycleTime => 7200,
      NFiles	=>   25,
      T1s => [ 'T1_002_MSS', 'T1_003_MSS', 'T1_004_MSS', 'T1_005_MSS',
	       'T1_006_MSS', 'T1_007_MSS', 'T1_008_MSS', 'T1_009_MSS', ],
    },
  },
      
  DatasetDefaults =>
  {
#   These are global defaults. They are overridden by per-dataflow defaults and
#   by values in the individual workflows.
    InUse		=>    0, # These are standard block-parameters
    IsOpen		=>   'y',
    IsMove		=>   'n',
    IsTransient		=>   'n',
    InjectionSite	=>    'T0_001_Buffer',
    NFiles		=> 1000,
    Priority		=>    3,
    InjectionsPerBlock	=>    4, # Use open blocks <n> times, then close them

    NCycles	=>   -1, # < 0 => infinite. > 0 to limit
    CycleTime	=>   7200,

#   These are intervals between events. Undefined => event fires immediately
    inject	=> undef,
    t1subscribe	=>     3,
    t2subscribe	=>  7200,
    t2delete	=>  7200,
    srcdelete	=>  7200,
  },

  Datasets =>
  [
    {
      Name	=> 'raw_0',
      InUse	=> 1,
      Dataflow	=> 'RAW',
      T1s	=> ['T1_002_MSS'],
    },
    {
      Name	=> 'reco_0',
      InUse	=> 1,
      Dataflow	=> 'RECO',
      T1s	=> [ 'T1_003_MSS' ],
    },
    {
      Name	=> 'aod_0',
      InUse	=> 1,
      Dataflow	=> 'AOD',
      T1s	=> [ 'T1_004_MSS' ],
      T2s	=> [ 'T2_010_Disk' ],
      NFiles	=> 2,
    },

    {
      Name	=> 'express_0',
      InUse	=> 1,
      Dataflow	=> 'EXPRESS',
      T1s	=> [ 'T1_002_MSS', 'T1_003_MSS' ],
    },

    {
      Name		=> 'mc_0',
      IsMove		=> 'n', # Should this be 'y' for MC?
      InUse		=>  1,
      Dataflow		=> 'MC',
      T1s		=> [ 'T1_005_MSS' ],
      InjectionSite	=> 'T2_011_Disk',
    },
  ],

  T2AssocMap =>
  {
# Map of T1-id -> set of associated T2 ids.
    'T1_002_MSS' => [ 'T2_010_Disk', 'T2_011_Disk', 'T2_012_Disk' ],
    'T1_003_MSS' => [ 'T2_013_Disk', 'T2_014_Disk', 'T2_015_Disk' ],
    'T1_004_MSS' => [ 'T2_016_Disk', 'T2_017_Disk', 'T2_018_Disk' ],
    'T1_005_MSS' => [ 'T2_019_Disk', 'T2_020_Disk', 'T2_021_Disk',
		      'T2_022_Disk', 'T2_023_Disk', 'T2_024_Disk',
		      'T2_025_Disk', 'T2_026_Disk', 'T2_027_Disk' ],
    'T1_006_MSS' => [ 'T2_028_Disk', 'T2_029_Disk', 'T2_030_Disk',
		      'T2_031_Disk', 'T2_032_Disk', 'T2_033_Disk',
		      'T2_034_Disk', 'T2_035_Disk', 'T2_036_Disk' ],
    'T1_007_MSS' => [ 'T2_037_Disk', 'T2_038_Disk', 'T2_039_Disk',
                      'T2_040_Disk', 'T2_041_Disk', 'T2_042_Disk',
                      'T2_043_Disk', 'T2_044_Disk', 'T2_045_Disk' ],
    'T1_008_MSS' => [ 'T2_046_Disk', 'T2_047_Disk', 'T2_048_Disk',
		      'T2_049_Disk', 'T2_050_Disk', 'T2_051_Disk',
		      'T2_052_Disk', 'T2_053_Disk', 'T2_054_Disk',
		      'T2_055_Disk', 'T2_056_Disk', 'T2_057_Disk' ],
    'T1_009_MSS' => [ 'T2_058_Disk', 'T2_059_Disk' ],
  },

  NodeID =>
  {
#   This is for convenience. Make sure it corresponds to t_adm_nodes!
#   Prefer to cache this here for debugging purposes, when not updating TMDB
    'T0_001_Buffer' =>  1, 'T0_001_MSS'    =>  2,
    'T1_002_Buffer' =>  3, 'T1_002_MSS'    =>  4,
    'T1_003_Buffer' =>  5, 'T1_003_MSS'    =>  6,
    'T1_004_Buffer' =>  7, 'T1_004_MSS'    =>  8,
    'T1_005_Buffer' =>  9, 'T1_005_MSS'    => 10,
    'T1_006_Buffer' => 11, 'T1_006_MSS'    => 12,
    'T1_007_Buffer' => 13, 'T1_007_MSS'    => 14,
    'T1_008_Buffer' => 15, 'T1_008_MSS'    => 16,
    'T1_009_Buffer' => 17, 'T1_009_MSS'    => 18,
    'T2_010_Disk'   => 19, 'T2_011_Disk'   => 20, 'T2_012_Disk'   => 21,
    'T2_013_Disk'   => 22, 'T2_014_Disk'   => 23, 'T2_015_Disk'   => 24,
    'T2_016_Disk'   => 25, 'T2_017_Disk'   => 26, 'T2_018_Disk'   => 27,
    'T2_019_Disk'   => 28, 'T2_020_Disk'   => 29, 'T2_021_Disk'   => 30,
    'T2_022_Disk'   => 31, 'T2_023_Disk'   => 32, 'T2_024_Disk'   => 33,
    'T2_025_Disk'   => 34, 'T2_026_Disk'   => 35, 'T2_027_Disk'   => 36,
    'T2_028_Disk'   => 37, 'T2_029_Disk'   => 38, 'T2_030_Disk'   => 39,
    'T2_031_Disk'   => 40, 'T2_032_Disk'   => 41, 'T2_033_Disk'   => 42,
    'T2_034_Disk'   => 43, 'T2_035_Disk'   => 44, 'T2_036_Disk'   => 45,
    'T2_037_Disk'   => 46, 'T2_038_Disk'   => 47, 'T2_039_Disk'   => 48,
    'T2_040_Disk'   => 49, 'T2_041_Disk'   => 50, 'T2_042_Disk'   => 51,
    'T2_043_Disk'   => 52, 'T2_044_Disk'   => 53, 'T2_045_Disk'   => 54,
    'T2_046_Disk'   => 55, 'T2_047_Disk'   => 56, 'T2_048_Disk'   => 57,
    'T2_049_Disk'   => 58, 'T2_050_Disk'   => 59, 'T2_051_Disk'   => 60,
    'T2_052_Disk'   => 61, 'T2_053_Disk'   => 62, 'T2_054_Disk'   => 63,
    'T2_055_Disk'   => 64, 'T2_056_Disk'   => 65, 'T2_057_Disk'   => 66,
    'T2_058_Disk'   => 67, 'T2_059_Disk'   => 68,
  },

# These are in case I am using a PhEDEx::Logger to send stuff to. I'm not...
  QueueEntries  => 1,
  RetryInterval => 2,
);

1;
