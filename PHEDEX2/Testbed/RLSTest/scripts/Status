#!/usr/bin/env perl

## Dump queue states of the publisher agents.

BEGIN { use strict; $^W = 1; }
my $me = $0;
$me =~ s|.*/||;

# Get directory contents
sub getdir
{
    my ($dir, $files) = @_;
    my @contents = ();
    return 0 if (! (opendir(DIR, $dir)
		    && (@contents = readdir(DIR))
		    && closedir(DIR)));

    @$files = grep($_ ne '.' && $_ ne '..', @contents);
    return 1;
}

# Scan various drop-box subdirs to see how many files are in each state.
my %results = ();
my @items;
foreach my $box (@ARGV) {
  $results{$box} = {
    PENDING => [],
    RECEIVED => [],
    WORK => [],
    BAD => [],
    OUTGOING => []
  };

  my (@inbox, @work, @outbox, $d);
  &getdir ("$box/inbox", \@inbox);
  foreach $d (@inbox) {
    next if ! -d "$box/inbox/$d";
    if (-f "$box/inbox/$d/go") {
      push(@{$results{$box}{RECEIVED}}, $d);
    } else {
      push(@{$results{$box}{PENDING}}, $d);
    }
  }

  &getdir("$box/work", \@work);
  foreach $d (@work) {
    next if ! -d "$box/work/$d";
    if (-f "$box/work/$d/bad") {
      push(@{$results{$box}{BAD}}, $d);
    } else {
      push(@{$results{$box}{WORK}}, $d);
    }
  }

  &getdir("$box/outbox", $results{$box}{OUTGOING});

  print "$box: @{[scalar @{$results{$box}{PENDING}}]} pending,",
        " @{[scalar @{$results{$box}{RECEIVED}}]} received,",
	" @{[scalar @{$results{$box}{WORK}}]} work,",
	" @{[scalar @{$results{$box}{BAD}}]} bad,",
	" @{[scalar @{$results{$box}{OUTGOING}}]} outgoing\n";
}
