#!/usr/bin/env perl
# Derek Feichtinger <derek.feichtinger@cern.ch>
# Adaptation by Lassi Tuura.

##H TestCatalogue -c CATALOGUE -p PROTOCOL [-d DESTINATION] { -L | -P } FILE...
##H
##H Looks up the file names in the trivial file CATALOGUE using PROTOCOL
##H and optional DESTINATION node.  With "-L", FILE is assumed to be an
##H LFN and is translated into a PFN; with "-P" FILE is assumed to be
##H a PFN and is translated into an LFN.
##H
##H Prints out the destination name for each file name.

# Process command line arguments.
my %args;
use PHEDEX::Core::Catalogue;
use Getopt::Long;
use PHEDEX::Core::Help;
use POSIX;
Getopt::Long::Configure qw(default no_ignore_case);
&GetOptions ('c=s'        => \$args{CATALOGUE},
             'p=s'        => \$args{PROTOCOL},
             'd=s'        => \$args{DESTINATION},
             'C=s'        => \$args{CUSTODIAL},
             'L'          => sub { $args{MODE} = $_[0] },
             'P'          => sub { $args{MODE} = $_[0] },
	     'help|h'      => sub { &usage() });

# Check arguments.
if (!$args{CATALOGUE} || !$args{PROTOCOL} || !$args{MODE})
{
    die "Insufficient parameters, use -h for help.\n";
}

$args{DESTINATION} ||= "any";
$args{CUSTODIAL} ||= "n";

# Output preamble
die "$args{CATALOGUE}: cannot read\n" if ! -r $args{CATALOGUE};
print "Testing file name mappings in $args{CATALOGUE} using protocol $args{PROTOCOL}\n";

# Output file names
foreach my $file (@ARGV)
{
    if ($args{MODE} eq 'P')
    {
	my ($token,$lfn,$pfn);
	($token,$lfn) = &lfnLookup($file, $args{PROTOCOL}, $args{DESTINATION}, $args{CATALOGUE}, $args{CUSTODIAL});
	print "PFN: $file\n";
	print "LFN: $lfn\n";
	print "TKN: $token\n";

	($token,$pfn) = &pfnLookup($lfn, $args{PROTOCOL}, $args{DESTINATION}, $args{CATALOGUE}, $args{CUSTODIAL});
	print "Re-PFN: $pfn";
	print " *** ERROR: result different from $file ($pfn)" if $pfn ne $file;
	print "\n\n\n";
    }
    else
    {
	my ($token,$lfn,$pfn);
	($token,$pfn) = &pfnLookup($file, $args{PROTOCOL}, $args{DESTINATION}, $args{CATALOGUE}, $args{CUSTODIAL});
	print "LFN: $file\n";
	print "PFN: $pfn\n";
	print "TKN: $token\n";

	($token,$lfn) = &lfnLookup($pfn, $args{PROTOCOL}, $args{DESTINATION}, $args{CATALOGUE}, $args{CUSTODIAL});
	print "Re-LFN: $lfn";
	print " *** ERROR: result different from $file ($lfn)" if $lfn ne $file;
	print "\n\n\n";
    }
}
