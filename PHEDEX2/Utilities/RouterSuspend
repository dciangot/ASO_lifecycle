#!/usr/bin/env perl

##H See or Remove the router suspension for blocks at a node
##H
##H Usage:
##H   RouterSuspend -db DBCONFIG [-node NODE] [-block BLOCK] [-unsuspend]
##H
##H By default displays all block destinations which were suspended by
##H the router due to constant failures, with optional filters.  By
##H adding the -unsuspend flag, block destinations matching the query
##H are unsuspended.
##H
##H Options:
##H   -node NODE        Node to filter results by
##H   -block BLOCK      Block to filter results by, accepts SQL wildcards (%)
##H   -unsuspend        Unsuspend the matching block destinations

use warnings;
use strict;

use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::Core::DB;
use PHEDEX::Core::Timing;

# Process command line arguments.
my %args;
&GetOptions ("db=s"            => \$args{DBCONFIG},
	     "node=s"          => \$args{NODE},
	     "block=s"         => \$args{BLOCK},
	     "unsuspend"       => \$args{UNSUSPEND},
	     "help|h"          => sub { &usage() });

if (!$args{DBCONFIG})
{
    die "Insufficient parameters, use -h for help.\n";
}

my $self = { DBCONFIG => $args{DBCONFIG} };
my $dbh = &connectToDatabase ($self);
my $now = &mytimeofday();

my $where = '';
my %p;
if ($args{NODE}) {
    $where .= " and n.name like :node";
    $p{':node'} = $args{NODE};
}
if ($args{BLOCK}) {
    $where .= " and b.name like :block";
    $p{':block'} = $args{BLOCK};
}

if (!$args{UNSUSPEND}) {
    my $n = 0;
    my $q = &dbexec($dbh, qq{
       select n.name node, b.name block, b.files, b.bytes / power(1000,3) size_gb,
              bd.time_subscription, bd.time_active, bd.time_suspend_until 
         from t_dps_block_dest bd 
         join t_adm_node n 
           on n.id = bd.destination 
         join t_dps_block b 
           on b.id = bd.block 
        where bd.state = 4 $where
     order by n.name, bd.time_subscription, bd.time_active
    }, %p);

    while (my $row = $q->fetchrow_hashref()) {
	printf("%s %s\n => files=%i size=%0.2fGB age_subs=%s age_actv=%s age_susp=%s\n",
	       $$row{NODE}, $$row{BLOCK}, 
	       $$row{FILES}, $$row{SIZE_GB},
	       &age($now - $$row{TIME_SUBSCRIPTION}),
	       &age($now - $$row{TIME_ACTIVE}),
	       &age($now - $$row{TIME_SUSPEND_UNTIL}));

	$n++;
    }
    print "$n router-suspended blocks found\n";
} else {
    my ($q, $n) = &dbexec($dbh, qq{
       update t_dps_block_dest
          set state = 0,
              time_suspend_until = NULL
        where (destination, block) 
           in ( select bd.destination, bd.block
                  from t_dps_block_dest bd 
                  join t_adm_node n 
                    on n.id = bd.destination 
                  join t_dps_block b 
                    on b.id = bd.block 
                 where bd.state = 4 $where
              )}, %p);
    $n += 0;
    print "$n blocks unsuspended\n";
    $dbh->commit();
}

&disconnectFromDatabase($self, $dbh, 1);
