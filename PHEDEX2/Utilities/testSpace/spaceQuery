#!/usr/bin/env perl
use strict;
use Getopt::Long;
use PHEDEX::CLI::UserAgent;
use Data::Dumper;

my ($response,$content,$method,$timeout,$node,$time_since,$time_until);
my ($level,$temp,$pua,$target,%payload,$rootdir);
$timeout = 500;

sub usage {
  print <<EOF;
  Usage:

  spaceQuery --node NODENAME --time_since DATE --time_until DATE --level LEVEL --rootdir ROOTDIR

EOF
  exit 0;
}

$time_since = -1;
$time_until = -1;
GetOptions(
        'node=s'    => \$node,
        'time_since=i'    => \$time_since,
        'time_until=i'    => \$time_until,
        'level=i'    => \$level,
        'rootdir=i'    => \$rootdir,
        'help|h'         => sub { &usage() }

      );
$pua = PHEDEX::CLI::UserAgent->new
    (
      URL        => 'https://pheSpaceMon.cern.ch/phedex/datasvc',
      FORMAT    => 'perl',
      INSTANCE    => 'dmwm_query',
    );
$pua->timeout($timeout) if $timeout;
$pua->CALL('storageusage');
$pua->Dump();
$target = $pua->target;
%payload = @ARGV;
$payload{node} = $node;
if($level) { $payload{level} = $level; }
if($rootdir) {$payload{rootdir} = $rootdir; }
if($time_since >= 0)  { $payload{time_since} = $time_since; }
if($time_until >= 0)  { $payload{time_until} = $time_until; }
foreach ( keys %payload ) {
  print $_, " ", $payload{$_}, "\n";
}

$response = $pua->get($target,\%payload);
if ( $pua->response_ok($response) )
{
# HTTP call returned correctly, print contents and quit...
  no strict 'vars';
  $content = eval($response->content());
  $content = $content->{PHEDEX}{NODES};
  Data::Dumper->Dump([ $content ]);
  foreach $record ( @{$content} ) {
    print "Record:\n  ",join(', ',map { "$_:$record->{$_}" } sort keys %{$record}),"\n";
  }
  exit 0;
}
else
{
# Something went wrong...
  chomp $content;
  print "Error from server ",$response->code(),"(",$response->message(),"), output below:\n",
        $response->content(),"\n";
  die "exiting after failure\n";
}
