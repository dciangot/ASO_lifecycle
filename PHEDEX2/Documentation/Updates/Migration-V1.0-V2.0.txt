-- ** STEP 1:  Copy data from devdb9 into pdb01
--             Copies 237 files and replicas for CERN_MSS, FZK_MSS,
--             FZK_Transfer, INFN_Transfer, PIC_Transfer, PIC_MSS;
--             and 129 replicas for IN2P3_Transfer

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_nodes
    using select * from t_nodes;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_routing
    using select * from t_routing;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_subscriptions
    using select * from t_subscriptions;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_files_for_transfer
   using select * from t_files_for_transfer;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_replica_state
    using select * from t_replica_state;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_transfer_state
    using select * from t_transfer_state;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_destinations
    using select * from t_destinations;

copy from cms_transfermgmt/smalland_round@devdb9
       to cms_transfermgmt/smalland_round@pdb01
   insert t_replica_metadata
    using select * from t_replica_metadata;

-- ** STEP 2: Clean up old data, we didn't have constraints preventing
--            duplicate rows, so get rid of them now.

select guid, t1_name, count(state) from filestate
       group by guid, t1_name having count(state) > 1;  
-- > 142A9B96-655F-D811-940C-0002B3D8E7E1 INFN 2
-- > 96BDC696-655F-D811-940C-0002B3D8E7E1 INFN 2
-- > CA3441B3-645F-D811-940C-0002B3D8E7E1 INFN 2
--

select * from filestate where
   (guid='142A9B96-655F-D811-940C-0002B3D8E7E1'
    or guid='96BDC696-655F-D811-940C-0002B3D8E7E1'
    or guid='CA3441B3-645F-D811-940C-0002B3D8E7E1')
   and t1_name = 'INFN'
  order by guid;
-- > 142A9B96-655F-D811-940C-0002B3D8E7E1 INFN 5
-- > 142A9B96-655F-D811-940C-0002B3D8E7E1 INFN 5
-- > 96BDC696-655F-D811-940C-0002B3D8E7E1 INFN 5
-- > 96BDC696-655F-D811-940C-0002B3D8E7E1 INFN 5
-- > CA3441B3-645F-D811-940C-0002B3D8E7E1 INFN 5
-- > CA3441B3-645F-D811-940C-0002B3D8E7E1 INFN 5

delete from filestate where
  (guid='142A9B96-655F-D811-940C-0002B3D8E7E1'
   or guid='96BDC696-655F-D811-940C-0002B3D8E7E1'
   or guid='CA3441B3-645F-D811-940C-0002B3D8E7E1')
  and t1_name = 'INFN';
insert into filestate values ('142A9B96-655F-D811-940C-0002B3D8E7E1', 'INFN', 5);
insert into filestate values ('96BDC696-655F-D811-940C-0002B3D8E7E1', 'INFN', 5);
insert into filestate values ('CA3441B3-645F-D811-940C-0002B3D8E7E1', 'INFN', 5);

-- ** STEP 3: Copy V1 data into V2 tables
-- *** STEP 3.1: Copy basic file data
insert into t_files_for_transfer
  (select guid, 'CERN_Transfer' from filesfortransfer);

insert into t_replica_state
  (select guid, 'CERN_Transfer',
          1097059177, 0, 1097059177, 0, 1097059177
   from filesfortransfer);

insert into t_replica_metadata
  (select guid, 'filesize', filesize from filesfortransfer);

insert into t_replica_metadata
  (select guid, 'checksum', checksum from filesfortransfer);

-- *** STEP 3.2: Copy replica data
insert into t_replica_state
  (select guid, trim(t1_name) || '_Transfer',
          1097059177, 0, 1097059177, 0, 1097059177
     from filestate
    where state = 5 or state = 6);

insert into t_replica_state
  (select guid, trim(t1_name) || '_MSS',
          1097059177, 0, 1097059177, 0, 1097059177
     from filestate
    where state = 6);

-- *** STEP 3.3: Copy POOL meta data attributes (in bash)
((echo "set pages 0;"; echo "select guid from filesfortransfer;") |
  sqlplus -S cms_transfermgmt/smalland_round@pdb01 |
  while read guid; do
    echo "(guid,$guid),$(POOL_OUTMSG_LEVEL=100 FClistMetaData -u $PHEDEX_CATALOGUE -q "guid='$guid'")"
  done) > metadata 2>&1 </dev/null

perl -we '
  use strict; use warnings; use English;
  while (<>) {
    my %md; chomp;
    while (/^\(([^,]+),(.*?)\)(,|$)/) {
      $md{$1} = ($2 eq "NULL" ? "" : $2); $_ = $POSTMATCH;
    }
    print map { "insert into t_replica_metadata values ("
              . "'\''$md{guid}'\'', '\''POOL_$_'\'', '\''$md{$_}'\'');\n" }
          grep ($_ ne "guid", sort keys %md);
    print "commit;\n";
  }'  metadata > metadata.sql

sqlplus cms_transfermgmt/smalland_round@pdb01 @metadata.sql

-- ** STEP 4: Verify data consistency
-- *** STEP 4.1: Verify that all files have meta data and exist in catalogue
select f.guid from t_files_for_transfer f
  left join t_replica_metadata m on m.guid = f.guid and m.attribute = 'POOL_dataset'
where m.value is null;
--> 1 not in RLS: 0A91EA0C-2366-D811-8292-00D0B7B86D05

select castor_filename from filesfortransfer where guid='0A91EA0C-2366-D811-8292-00D0B7B86D05';
--> /castor/cern.ch/cms/PCP04/DST813/EVD0_Events.1c763e4eac3211d888ac0002b3afabe7.94300053.hg03b_hww_2l_150.hg_DST813_2_g133_CMS

-- *** STEP 4.2: Verify that all files in t_replica_state were in filestate
select rs.guid, m.value from t_replica_state rs
  left join t_replica_metadata m on m.guid = rs.guid and m.attribute = 'POOL_dataset'
  left join filestate s on s.guid = rs.guid
 where s.guid is null and m.value != 'mu03b_DY2mu_Mll2000'
 group by rs.guid, m.value
 order by m.value, rs.guid;
--> 15 rows -- files that V1 allocator failed to allocate (will be fixed by V2 allocator):
-->  hg03_H2mu_ma100_tb40                     hg03_H2mu_ma100_tb50
-->    1478855B-F3B5-D811-93AE-0002B3AFAF99     0083C0E2-52B6-D811-8D8B-0002B3AFAFDB
-->    229A9975-F4B5-D811-96F2-0002B3AF7CE7     1AB275FE-51B6-D811-8705-0002B3AFABE7
-->    26939559-F4B5-D811-93AE-0002B3AFAF99     2A397DF5-52B6-D811-84AD-0002B3AF7CE7
-->    461C585D-F3B5-D811-96F2-0002B3AF7CE7     482C6CE6-52B6-D811-8705-0002B3AFABE7
-->    80725975-F4B5-D811-96F2-0002B3AF7CE7     66E02BE6-52B6-D811-8705-0002B3AFABE7
-->    DE945459-F4B5-D811-93AE-0002B3AFAF99     6A785300-52B6-D811-8D8B-0002B3AFAFDB
-->                                             6C0202E3-52B6-D811-8D8B-0002B3AFAFDB
-->                                             BAD4BFF5-52B6-D811-84AD-0002B3AF7CE7
-->                                             D6622500-52B6-D811-84AD-0002B3AF7CE7

-- *** STEP 4.3: Check that all files have size
select f.guid from t_files_for_transfer f
   left join t_replica_metadata m on m.guid = f.guid and m.attribute = 'filesize'
 where m.value is null;
--> no rows.

-- *** STEP 4.4: Check that all files exist in castor (in bash)
((echo "set pages 0"
  echo "set lines 1000"
  echo "select guid from t_files_for_transfer;"
  echo "quit") |
 sqlplus -S cms_transfermgmt/smalland_round@pdb01 |
 POOL_OUTMSG_LEVEL=100 xargs -n100 FClistGuidPFN -g -u $PHEDEX_CATALOGUE |
 awk '{print $2}' |
 grep castorgrid.cern.ch |
 sed 's|sfn://castorgrid.cern.ch||') >& files </dev/null &


while read file; do
  rfstat $file >/dev/null 2>&1 || echo $file
done < files