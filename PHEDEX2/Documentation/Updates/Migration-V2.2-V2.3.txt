2.2 -> 2.3 MIGRATION LOG
------------------------

* Stop everything on Prod

* Rename all the tables out of the way

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleSave.sql </dev/null

* Create new passwords

Use Utilities/WordMunger to create new passwords

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin)
  password
sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Reader)
  password
sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/CERN)
  password

* Initialise new schema

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleInit.sql </dev/null

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleStatsEnable.sql < /dev/null

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleStatsUpdate.sql < /dev/null

./Schema/OracleSyns.sh cms_transfermgmt \
  $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  $(Schema/OracleConnectId -db Schema/DBParam:Prod/Reader)

./Schema/OracleSyns.sh cms_transfermgmt \
  $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  $(Schema/OracleConnectId -db Schema/DBParam:Prod/CERN)

./Schema/OraclePrivs.sh \
  $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  cms_transfermgmt_reader cms_transfermgmt_writer

* Create new data

./Utilities/NodeNew -db Schema/DBParam:Prod/Admin \
 T1_ASGC_Buffer:Buffer \
 T1_ASGC_MSS:MSS \
 T1_CERN_Buffer:Buffer \
 T1_CERN_MSS:MSS \
 T1_CNAF_Buffer:Buffer \
 T1_CNAF_MSS:MSS \
 T1_FNAL_Buffer:Buffer \
 T1_FNAL_MSS:MSS \
 T1_FZK_Buffer:Buffer \
 T1_FZK_MSS:MSS \
 T1_IN2P3_Buffer:Buffer \
 T1_IN2P3_MSS:MSS \
 T1_PIC_Buffer:Buffer \
 T1_PIC_MSS:MSS \
 T1_RAL_Buffer:Buffer \
 T1_RAL_MSS:MSS \
 T2_Bari_Buffer:Disk \
 T2_Beijing_Buffer:Disk \
 T2_Belgium_IIHE:Disk \
 T2_Belgium_UCL:Disk \
 T2_Budapest_Buffer:Disk \
 T2_CSCS_Buffer:Disk \
 T2_Caltech_Buffer:Disk \
 T2_DESY_Buffer:Buffer \
 T2_DESY_MSS:MSS \
 T2_Demokritos_Buffer:Disk \
 T2_Estonia_Buffer:Disk \
 T2_Florida_Buffer:Disk \
 T2_GRIF_Buffer:Disk \
 T2_HIP_Buffer:Disk \
 T2_IHEP_Buffer:Buffer \
 T2_IHEP_MSS:MSS \
 T2_ITEP_Buffer:Disk \
 T2_Imperial_Buffer:Disk \
 T2_JINR_Buffer:Disk \
 T2_KNU_Buffer:Buffer \
 T2_KNU_MSS:MSS \
 T2_Legnaro_Buffer:Disk \
 T2_London_IC_HEP:Disk \
 T2_MIT_Buffer:Disk \
 T2_Nebraska_Buffer:Disk \
 T2_Pisa_Buffer:Disk \
 T2_Purdue_Buffer:Disk \
 T2_RWTH_Buffer:Buffer \
 T2_Rome_Buffer:Disk \
 T2_RutherfordPPD:Disk \
 T2_SINP_Buffer:Disk \
 T2_Spain_Buffer:Disk \
 T2_Spain_IFCA:Disk \
 T2_Taiwan_Buffer:Disk \
 T2_UCSD_Buffer:Disk \
 T2_Wisconsin_Buffer:Disk \
 T3_Karlsruhe_Buffer:Disk \
 T3_Minnesota_Buffer:Buffer \
 T3_Perugia_Buffer:Disk \
 T3_UIowa_Buffer:Buffer

./Utilities/NodeNew -db Schema/DBParam:Prod/Admin T1_RAL_Stage:Buffer
./Utilities/NodeNew -db Schema/DBParam:Prod/Admin TV_LCG_Production:Buffer
./Utilities/NodeNew -db Schema/DBParam:Prod/Admin TX_LCGBO_Buffer:Disk

(echo "set feedb off heading off echo off def &"; echo "select './Utilities/LinkNew -db Schema/DBParam:Prod/Admin ' || name || ' ' || replace(name, 'MSS', 'Buffer') || ':L/1' from t_node where name like '%MSS' order by name;") | sqlplus -S $(Schema/OracleConnectId -db Schema/DBParam:SC4/Admin) | sh

(echo "set feedb off heading off echo off def &"; echo "select './Utilities/LinkNew -db Schema/DBParam:Prod/Admin ' || n1.name || ' ' || n2.name || ':R/2' from t_node n1, t_node n2 where n1.name like 'T1%Buffer' and n2.name like 'T1%Buffer' and n2.name > n1.name order by n1.name, n2.name;") | sqlplus -S $(Schema/OracleConnectId -db Schema/DBParam:SC4/Admin) | sh

(echo "set feedb off heading off echo off def &"; echo "select './Utilities/LinkNew -db Schema/DBParam:Prod/Admin ' || n1.name || ' ' || n2.name || ':R/3' from t_node n1, t_node n2 where n1.name like 'T1%Buffer' and n2.name not like 'T1%' and n2.name not like '%MSS' and n2.name > n1.name order by n1.name, n2.name;") | sqlplus -S $(Schema/OracleConnectId -db Schema/DBParam:SC4/Admin) | grep -v Load | sh

* Migrate statistics data

-- remove duplicate bogus row (same data exists for T1_ASGC_MSS)
delete from xt_perf_histogram where to_node = 'T1_ASCC_MSS';

-- merge in old performance data
insert into t_link_histogram
  (timebin, timewidth, from_node, to_node, priority,
   pend_files, pend_bytes, done_files, done_bytes)
  --
  select
    h.timebin, 300, nf.id, nt.id, 2,
    h.pending_files, h.pending_bytes,
    h.xferred_files, h.xferred_bytes
  from xt_perf_histogram h
    left join t_node nf on nf.name = h.from_node
    left join t_node nt on nt.name =
        replace(
        replace(
        replace(h.to_node,
        'T2_Belgium_Buffer', 'T2_Belgium_IIHE'),
        'T2_NCU_Buffer', 'T2_Taiwan_Buffer'),
        'T3_RWTH_Buffer', 'T2_RWTH_Buffer');

-- now merge in quality data (the little we have)
merge into t_link_histogram h
  using
   (select
      h.timebin, nf.id from_node, nt.id to_node,
      sum(case when new_state = 2 then transitions end) try_files,
      sum(case when old_state = 2 and new_state >= 100 then transitions end) fail_files,
      sum(case when new_state = 3 then transitions end) done_files
    from xt_quality_histogram h
     left join t_node nf on nf.name = h.from_node
     left join t_node nt on nt.name =
        replace(
        replace(
        replace(h.to_node,
        'T2_Belgium_Buffer', 'T2_Belgium_IIHE'),
        'T2_NCU_Buffer', 'T2_Taiwan_Buffer'),
        'T3_RWTH_Buffer', 'T2_RWTH_Buffer')
     group by h.timebin, nf.id, nt.id) q
  on (h.timebin = q.timebin and
      h.from_node = q.from_node and
      h.to_node = q.to_node)
  when matched then
    update set
      h.try_files = q.try_files, h.fail_files = q.fail_files
  when not matched then
    insert (timebin, timewidth, from_node, to_node, priority,
            done_files, try_files, fail_files)
    values (q.timebin, 300, q.from_node, q.to_node, 2,
            q.done_files, q.try_files, q.fail_files);


* Create authentication roles

cd /data/SC4Nodes 
eval $(PHEDEX/Utilities/Master -config SITECONF/CERN/PhEDEx/Config.SC4 environ)

cd ~/private/roles/V2
mkdir old; mv Details Output old

ln -s /data/DevNodes/SITECONF/CERN/PhEDEx/DBParam DBParam
for x in ../Dev/Output/*; do
  case $x in *bockjoo* | *felzmann* | *madagascar* ) continue ;; esac;
  site=$(echo $x | awk -F_ '{print $2}');
  mail=$(echo $x | awk -F: '{print $2}');
  (set -x; Schema/OracleInitRole.sh DBParam:Prod ../Keys/$mail $site);
done
for x in Output/*; do
  /usr/sbin/sendmail -t < $x
done

* Refresh stats again

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleStatsUpdate.sql < /dev/null

* Restart CERN nodes

PHEDEX/Utilities/Master -config SITECONF/CERN/PhEDEx/Config.Prod start


* Clear old tables

sqlplus $(Schema/OracleConnectId -db Schema/DBParam:Prod/Admin) \
  @ Schema/OracleResetOld.sql < /dev/null
