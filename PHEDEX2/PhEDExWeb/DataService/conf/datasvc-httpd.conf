# Configuration for PhEDEx Data Service
# Place in apps.d/ directory of the installed apache2-conf RPM

# Load the perl module
<IfModule !perl_module>
  LoadModule perl_module @MOD_PERL_LIB@
</IfModule>

<IfModule !mod_cache.c>
  LoadModule cache_module @APACHE2_MODULES@/mod_cache.so
</IfModule>

<IfModule !mod_disk_cache.c>
  LoadModule disk_cache_module @APACHE2_MODULES@/mod_disk_cache.so
</IfModule>

# Tune the number of servers that can run to avoid using too much
# memory.  TODO:  What if more than one app is setting this?

<IfModule prefork.c>
  StartServers         8
  MinSpareServers      5
  MaxSpareServers      5
  ServerLimit          50
  MaxClients           50
  MaxRequestsPerChild  4000
</IfModule>

# Listen on our own port and encapsulate our settings within a
# VirtualHost

Listen 7001
<VirtualHost *:7001>
  DocumentRoot @DOCUMENT_ROOT@

  <Location / >
    Order allow,deny
    Allow from all
  </Location>

  #  Logging.  We expect to be in a reverse-proxy setup, so we will
  #  alter our log format so it doesn't appear as if every access came from
  #  the front-end
  LogLevel warn
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b" common
  LogFormat "%{Referer}i -> %U" referer
  LogFormat "%{User-agent}i" agent
  ErrorLog  "|rotatelogs -f @PROJECT_ROOT@/logs/phedex_datasvc_error_log_%Y%m%d 86400"
  CustomLog "|rotatelogs -f @PROJECT_ROOT@/logs/phedex_datasvc_access_log_%Y%m%d 86400" combined

  <IfDefine PERLDB>
# Don't forget to add '-X -D PERLDB' to your apache2/conf/server-opts.txt!
    <Perl>
      use Apache::DB ();
      Apache::DB->init;
    </Perl>
    <Location />
      PerlFixupHandler Apache::DB
    </Location>
  </IfDefine>

  PerlPassEnv ORACLE_HOME
  PerlPassEnv TNS_ADMIN
  PerlPassEnv LD_LIBRARY_PATH

  PerlInitHandler Apache2::Reload
  PerlCleanupHandler Apache2::SizeLimit

  <Perl>
#!/usr/bin/env perl

BEGIN {
    use strict; use warnings; $^W=1; use Config;
}

# Generic mod_perl stuff
use ModPerl::Util ();
use Apache2::RequestRec ();
use Apache2::RequestIO ();
use Apache2::RequestUtil ();
use Apache2::ServerRec qw(warn);
use Apache2::ServerUtil ();
use Apache2::Connection ();
use Apache2::Log ();
use APR::Table ();
use ModPerl::Registry ();
use Apache2::Reload ();
use Apache2::Const -compile => ':common';
use APR::Const -compile => ':common';

# App specific stuff
use CGI ();
use Apache::DBI;
use DBD::Oracle;
use Apache2::SizeLimit;
$Apache2::SizeLimit::MAX_PROCESS_SIZE  = 400000; # 400 MB

use PHEDEX::Web::Core;

1;
  </Perl>

  RewriteEngine on

  <Directory @DOCUMENT_ROOT@ >
    Order deny,allow
    Deny from all
  </Directory>

  # Application server comes from another release, configured
  # elsewhere and running a virtual host on another port.  We only get
  # requests for /phedex/datasvc* from the frontend, so we redirect via a
  # proxy to the webapp virtual host.  All requests to
  # /phedex/datasvc/app appear to come from us, but are actually served by
  # the other virtual host.
  RewriteRule ^/phedex/datasvc/app(/.*)?$ http://localhost:7011$1 [P,L]

  RewriteRule ^/phedex/datasvc/static(.*)$ @DOCUMENT_ROOT@/static$1 [L]
  <Directory @DOCUMENT_ROOT@/static >
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

  RewriteRule ^/phedex/datasvc(.*)$ @DOCUMENT_ROOT@/Service$1 [L]
  <Directory @DOCUMENT_ROOT@ >
    <FilesMatch "Service">
      Order allow,deny
      Allow from all

      Options +ExecCGI
      SetHandler perl-script
      #PerlResponseHandler ModPerl::Registry
      PerlResponseHandler PHEDEX::Web::DataService
      PerlOptions +ParseHeaders
      SetOutputFilter DEFLATE
      SetEnv PHEDEX_SERVER_CONFIG @DOCUMENT_ROOT@/conf/datasvc-app.conf
      SetEnv PHEDEX_YUI_ROOT @YUI_ROOT@
      SetEnv PHEDEX_PROTOVIS_ROOT @PROTOVIS_ROOT@
    </FilesMatch>
  </Directory>

  # Cache settings

  <IfModule mod_cache.c>
  <IfModule mod_disk_cache.c>
     CacheEnable disk /phedex/datasvc
     CacheRoot @CACHE_DIRECTORY@
     # 100 MB		
     CacheMaxFileSize 104857600 
     CacheIgnoreCacheControl On
     # CacheIgnoreNoLastMod On
     CacheDefaultExpire 60
     CacheMaxExpire 10800
  </IfModule>
  </IfModule>

  <FilesMatch "\.(html|txt|gif|jpg|png|ico|css|js)$">
    Header set Cache-Control "max-age=172800, public, must-revalidate"
  </FilesMatch>

</VirtualHost>

# Debug settings

#PerlSetVar StatusOptionsAll On
#PerlSetVar StatusTerse On
#PerlSetVar StatusTerseSize On
#PerlSetVar StatusTerseSizeMainSummary On
#PerlModule Apache2::Status
#PerlModule B::TerseSize

#<Location /perl-status>
#  SetHandler perl-script
#  PerlHandler Apache2::Status
#  order deny,allow
#  allow from all
#</Location>
