#!/usr/bin/env perl

# This tool functions as a fake data source. Usage:
#
# CreateTestFiles <base-directory> <set-name> <number-of-files>
#
# This will create number-of-files in <base-directory>, with POOL
# catalogue owner/dataset set to <set-name>, and catalogue drops
# made under <base-directory>/<set-name>.
#
# Each file will be simple, containing it's own GUID.
#
# The files won't be registered into a catalogue or TMDB.  You
# need to do that separately.

BEGIN { use strict; use warnings; $^W=1; }
use File::Path;
my ($basedir, $setname, $count, @junk) = @ARGV;

print "$count files in $basedir as $setname\n";

$preamble = <<EOF;
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE POOLFILECATALOG SYSTEM "InMemory">
<POOLFILECATALOG>
  <META name="Content" type="string"/>
  <META name="DBoid" type="string"/>
  <META name="DataType" type="string"/>
  <META name="FileCategory" type="string"/>
  <META name="Flags" type="string"/>
  <META name="dataset" type="string"/>
  <META name="jobid" type="string"/>
  <META name="owner" type="string"/>
  <META name="runid" type="string"/>
EOF
$trailer = "</POOLFILECATALOG>\n";

for (; $count > 0; --$count) {
    my $dir = "$basedir/$setname/$setname.$count";
    &mkpath ("$dir");
    system ("touch $dir/go");
    open (CAT, "> $dir/XMLCatFragment.$setname.$count.xml") or die;
    open (CKSUM, "> $dir/Checksum.$setname.$count.txt") or die;

    print CAT $preamble;
    for ($i = 1; $i <= 10; ++$i) {
        $guid = qx(uuidgen); chomp ($guid);
        my $file = "Testbed.$setname.$count.$i";
        my $path = "$basedir/$file";
        open (FILE, "> $path") || die "$file: $!\n";
        print FILE "$guid\n";
        close (FILE);

	print CKSUM qx(cd $basedir && cksum $file);
	print CAT <<EOF;

  <File ID="$guid">
    <physical>
      <pfn filetype="ROOT_All" name="$path"/>
    </physical>
    <logical>
      <lfn name="$file"/>
    </logical>
    <metadata att_name="Content" att_value=""/>
    <metadata att_name="DBoid" att_value="FAKE_ENTRY"/>
    <metadata att_name="DataType" att_value="EVD"/>
    <metadata att_name="FileCategory" att_value="Events"/>
    <metadata att_name="Flags" att_value=""/>
    <metadata att_name="dataset" att_value="$setname"/>
    <metadata att_name="jobid" att_value="fake"/>
    <metadata att_name="owner" att_value="$setname"/>
    <metadata att_name="runid" att_value="$count"/>
  </File>
EOF
    }

    print CAT $trailer;
    close (CAT);
    close (CKSUM);
}
