#!/usr/bin/env perl
BEGIN { use warnings; use strict; $^W=1; }

my $home = $0; $home =~ s|/[^/]+$||;
my %args = (CONFIG => "$home/Config", DELAY => 0);

while (@ARGV)
{
    if ($ARGV[0] eq "-config" && scalar @ARGV > 1) {
	shift (@ARGV); $args{CONFIG} = shift (@ARGV);
    } 
    elsif ($ARGV[0] eq "-delay" && scalar @ARGV > 1) {
        shift (@ARGV); $args{DELAY} = shift (@ARGV);
    }
    elsif ($ARGV[0] =~ /^-/) {
	die "unrecognised option $ARGV[0]\n";
    } 
    else {
	last;
    }
}

my $mode = shift(@ARGV) || "start";
defined $args{CONFIG} || die "no configuration, use -config";
-f $args{CONFIG} || die "$args{CONFIG}: no such file\n";
-r $args{CONFIG} || die "$args{CONFIG}: not readable\n";
open(CONFIG, "< $args{CONFIG}") || die "$args{CONFIG}: cannot read: $!\n";

my @agents = ();
my $environ = "";
while (<CONFIG>)
{
  while (/^###\s+([A-Z]+)(\s+(.*)|$)/)
  {
    chomp; s/\s+$//;
    if ($1 eq "ENVIRON")
    {
      while (<CONFIG>)
      {
	last if /^###/; chomp; s/#.*//; s/^\s+//; s/\s+$//;
	$environ .= "$_\n" if ($_ ne "");
      }
    }
    elsif ($1 eq "AGENT")
    {
      push(@agents, $agent = { map { m|([^=]+)=(\S+)|g } split(/\s+/, $3) });
      while (<CONFIG>)
      {
	last if /^###/; chomp; s/#.*//; s/^\s+//; s/\s+$//;
	$agent->{OPTS} .= " $_" if ($_ ne "");
      }
    }
    else
    {
      die "unrecognised section $1\n";
    }
  }
}
close (CONFIG);

if ($mode eq "start" || $mode eq "stop" || $mode eq 'show')
{
  if ($mode eq 'show') {
      open (SH, ">&STDOUT") or die "cannot open output: $!\n";
  } else {
      open (SH, "| sh") or die "cannot exec sh: $!\n";
  }
  print SH $environ, "\n";

  foreach $agent (@agents) {
    next if (@ARGV && !grep($_ eq "all" || $_ eq $agent->{LABEL}, @ARGV));
    next if (! @ARGV && ($agent->{DEFAULT} || 'on') eq 'off');

    if ($mode eq 'start' || $mode eq 'show') {
      print SH "mkdir -p \${PHEDEX_STATE}/$agent->{LABEL} &&",
	       " mkdir -p \${PHEDEX_LOGS} &&",
	       ($agent->{STATELINK}
	        ? " ln -sf $agent->{LABEL} \${PHEDEX_STATE}/$agent->{STATELINK};" : " :;"),
	       "\nnohup \${PHEDEX_SCRIPTS}/$agent->{PROGRAM}",
	       (" -", $agent->{STATEOPT} || "state", " ", "\${PHEDEX_STATE}/$agent->{LABEL}"),
	       $agent->{OPTS},
	       " >> \${PHEDEX_LOGS}/$agent->{LABEL} 2>&1 </dev/null &\n";
    } elsif ($mode eq 'stop') {
      print SH "touch \${PHEDEX_STATE}/$agent->{LABEL}/stop\n";
    }
    sleep ($args{DELAY});
  }
  close (SH);
  print "Some problem starting agent @_\n" if (@_);
}
elsif ($mode eq "environ")
{
  print $environ, "\n";
}
else
{
  die "unrecognised operation mode \"$mode\"\n";
}

exit 0;
