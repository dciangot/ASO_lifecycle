#!/usr/bin/env perl

##H GetLocalPath -cat CATALOGUE -pfn PFN
##H
##H Little helper script to generate the local path to data
##H when giving full transfer URL.
##H

# Process command line arguments.
my %args;
my $protocol=undef;
use PHEDEX::Core::Catalogue;
use Getopt::Long;
use PHEDEX::Core::Help;
use POSIX;
Getopt::Long::Configure qw(default no_ignore_case);
&GetOptions ('catalogue=s'    => \$args{CATALOGUE},
             'pfn=s'          => \$args{PFN},
             'help|h'         => sub { &usage() });

# Check arguments.
if (!$args{CATALOGUE} || !$args{PFN})
{
    die "Insufficient parameters, use -h for help.\n";
}

if ( $args{PFN} =~ m/^srm/ ) {
   if ( $args{PFN} =~ m/managerv1/ ) { $protocol='srm'; }
   elsif ( $args{PFN} =~ m/managerv2/ ) { $protocol='srmv2'; }
   else { die "Undefined SRM version!"; }
}
elsif ( $args{PFN} =~ m/^rfio/ ) { $protocol='rfio'; }
elsif ( $args{PFN} =~ m/^\// ) { $protocol='direct'; }
else { die "Undefined protocol!"; }

my $lfn = &lfnLookup($args{PFN}, $protocol, 'any', $args{CATALOGUE});
die "Wasn't able to perform PFN-to-LFN operation. Please check you catalogue!"
     if !$lfn;
my $localfile = &pfnLookup($lfn, 'direct', 'any', $args{CATALOGUE});
die "Wasn't able to perform LFN-to-PFN operation. Please check you catalogue!"
     if !$localfile;

print "$localfile\n";

exit 0;
