#!/usr/bin/env perl

##H Remove a node, assuming it has no files.
##H
##H Usage:
##H   NodeRemove -db DBCONFIG [-force] NODE...
##H
##H Examples:
##H   NodeRemove -db Schema/DBParam:Foo T2_Foo_Buffer T2_Foo_Load
##H
##H NODE is the name of the node to delete.

# Process command line arguments.
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::Core::DB;
use PHEDEX::Core::Timing;
&GetOptions ("db=s"        => \$args{DBCONFIG},
             "force"	   => \$args{FORCE},
	     "help|h"      => sub { &usage() });

# Check arguments.
if (scalar @ARGV < 1 || !$args{DBCONFIG})
{
  die "Insufficient parameters, use -h for help.\n";
}

my $self = { DBCONFIG => $args{DBCONFIG} };
my $dbh = &connectToDatabase ($self);
while (@ARGV)
{
  my $name = shift(@ARGV);
  print "Removing $name\n";

  # If forced, remove sensitive data.
  if ($args{FORCE})
  {
    &dbexec($dbh, qq{
      delete from t_dps_subs_dataset where destination =
        (select id from t_adm_node where name = :name)},
      ":name" => $name);
    &dbexec($dbh, qq{  
      delete from t_dps_subs_block where destination =  
	(select id from t_adm_node where name = :name)},
      ":name" => $name);
    &dbexec($dbh, qq{
      delete from t_xfer_replica where node =
        (select id from t_adm_node where name = :name)},
      ":name" => $name);
    &dbexec($dbh, qq{
      delete from t_dps_file where node =
        (select id from t_adm_node where name = :name)},
      ":name" => $name);
    foreach my $kind (qw(stats events))
    {
        &dbexec($dbh, qq{
          delete from t_history_link_$kind where to_node =
            (select id from t_adm_node where name = :name)},
          ":name" => $name);
        &dbexec($dbh, qq{
          delete from t_history_link_$kind where from_node =
            (select id from t_adm_node where name = :name)},
          ":name" => $name);
    }
    &dbexec($dbh, qq{
      delete from t_history_dest where node =
        (select id from t_adm_node where name = :name)},
      ":name" => $name);
  }

  # Delete the actual node
  my $sql = "begin proc_delete_node('$name'); end;";
  PHEDEX::Core::DB::dbexec($dbh,$sql);
  $dbh->commit();
}

&disconnectFromDatabase($self, $dbh, 1);
