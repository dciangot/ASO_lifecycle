#!/usr/bin/env perl

BEGIN { use strict; use warnings; $^W=1; }

my $delay = $ARGV[0] || 1;

sub getstats
{
    my %stats = ();
    open (STATS, "< /proc/net/dev") or die "can't read /proc/net/dev: $!";
    while (<STATS>)
    {
	if (my ($if, $vals) = /\s+(\S+):([\s\d]+)$/) {
	    $stats{$if} = [ ($vals =~ /(\d+)/g) ];
	    # $stats{$1} = [ split (/\s+/, $2) ];
	}
    }
    close (STATS);
    return %stats;
}

$| = 1;
my %old = &getstats();
my %new = %old;

while (1)
{
    my $prefix = "";
    foreach my $if (sort keys %new) {
        print "$prefix$if",
	      sprintf ("%10.1f", ($new{$if}[0] - $old{$if}[0]) / 1024 / $delay),
	      sprintf ("%10.1f", ($new{$if}[8] - $old{$if}[8]) / 1024 / $delay);
	$prefix = "   ";
    }
    print "\r";

    sleep ($delay);
    %old = %new; %new = &getstats();
}
