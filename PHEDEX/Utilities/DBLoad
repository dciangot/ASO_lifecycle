#!/usr/bin/env perl

##H Load database dump produced with DBDump.
##H
##H Usage:
##H   DSBLoad -db FILE[:SECTION] } [-commit N] FILE...
##H
##H -db           database connection configuration parameter file
##H -commit       set commit interval in rows, default at the end
##H FILE          name of the file to load, containing rows to load

my %args;
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::Core::DB;
&GetOptions ("db=s"        => \$args{DBCONFIG},
             "commit=i"    => \$args{COMMIT},
	     "help|h"      => sub { &usage() });

if (! $args{DBCONFIG})
{
    die "Insufficient parameters, use -h for help.\n";
}

my $row = 0;
my $dbh = &connectToDatabase (\%args);
foreach my $file (@ARGV)
{
    open (F, "< $file") || die "$file: cannot open: $!\n";
    while (<F>)
    {
	chomp;
	my @columns;
	my ($table, $nrow) = /^([^,]+),(\d+)/;
	for ($_ = $'; /^,([^,]+),"([^"]*)"/ || /^,([^,]+),(?=,)/; $_ = $')
	{
	    push (@columns, [ $1, $2 ]);
	}
	my $sql = "insert into $table (" . join(", ", map { "$_->[0]" } @columns) . ") values ("
	          . join(", ", map { ":$_->[0]" } @columns) . ")";

	print "$table $nrow\n";
	&dbexec($dbh, $sql, map { (":$_->[0]" => $_->[1]) } @columns);

	$dbh->commit() if ($args{COMMIT} && (++$row % $args{COMMIT}) == 0);
    }
    close (F);
}

$dbh->commit ();
&disconnectFromDatabase(\%args, $dbh, 1);
