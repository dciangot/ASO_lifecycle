#!/usr/bin/env perl

##H Check if files exist at a node for a block.
##H   Input format is node:block
##H   Output format is node,block,flag,n_files
##H   flag is "FILES_EXIST" or "NO_FILES"
##H
##H  Note:  Does not check if block actually exists.
##H
##H Usage:
##H   CheckBlock -db DBCONFIG [node:block] [node:block]
##H
##H Examples:
##H   cat formatted-file.txt | CheckBlock -db Schema/DBParam:Foo
##H
##H This program was made to provide proof of deletion.  I suppose it
##H could have other uses as well.

# Process command line arguments.
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::Core::DB;
use PHEDEX::Core::Timing;
&GetOptions ("db=s"        => \$args{DBCONFIG},
	     "help|h"      => sub { &usage() });

unless ($args{DBCONFIG}) {
    die "Insuficient parameters.  Seek help.\n";
}

my $self = { DBCONFIG => $args{DBCONFIG} };
my $dbh = &connectToDatabase ($self);

my $sql = qq{ select br.node_files
              from t_dps_block_replica br
              join t_dps_block b on b.id = br.block
              join t_adm_node n on n.id = br.node
	      where b.name = :block and n.name = :node };

while (<>)
{
    chomp;
    next unless $_;
    my ($node, $block) = split /:/, $_;
    next unless ($node && $block);
    my $files = &dbexec($dbh, $sql, 
			':node' => $node, ':block' => $block)->fetchrow();

    print join(',', $node, $block,
	       $files ? 'FILES_EXIST' : 'NO_FILES',
	       $files ? $files : 0), "\n";
}

&disconnectFromDatabase($self, $dbh, 1);
