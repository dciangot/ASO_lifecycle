# Configuration for PhEDEx Website
# Place in apps.d/ directory of the installed apache2-conf RPM

# Load the perl module
<IfModule !perl_module>
  LoadModule perl_module @MOD_PERL_LIB@
</IfModule>


# Tune the number of servers that can run to avoid using too much
# memory.  TODO:  What if more than one app is setting this?

<IfModule prefork.c>
  StartServers         8
  MinSpareServers      5
  MaxSpareServers      5
  ServerLimit          50
  MaxClients           50
  MaxRequestsPerChild  4000
</IfModule>

# Listen on our own port and encapsulate our settings within a
# VirtualHost

Listen 7101
<VirtualHost *:7101>
  DocumentRoot @PHEDEX_ROOT@/Documentation/WebSite

  #  Logging.  We expect to be in a reverse-proxy setup, so we will
  #  alter our log format so it doesn't appear as if every access came from
  #  the front-end
  LogLevel warn
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
  LogFormat "%h %{X-Forwarded-For}i %l %u %t \"%r\" %>s %b" common
  LogFormat "%{Referer}i -> %U" referer
  LogFormat "%{User-agent}i" agent
  ErrorLog  "|rotatelogs -f @PROJECT_ROOT@/logs/phedex_web_error_log_%Y%m%d 86400"
  CustomLog "|rotatelogs -f @PROJECT_ROOT@/logs/phedex_web_access_log_%Y%m%d 86400" combined

  <IfDefine PERLDB>
# Don't forget to add '-X -D PERLDB' to your apache2/conf/server-opts.txt!
    <Perl>
      use Apache::DB ();
      Apache::DB->init;
    </Perl>
    <Location />
      PerlFixupHandler Apache::DB
    </Location>
  </IfDefine>

  PerlPassEnv ORACLE_HOME
  PerlPassEnv TNS_ADMIN
  PerlPassEnv LD_LIBRARY_PATH

  PerlInitHandler Apache2::Reload
  PerlCleanupHandler Apache2::SizeLimit

  <Perl>
#!/usr/bin/env perl

BEGIN {
    use strict; use warnings; $^W=1; use Config;
}

# Generic mod_perl stuff
use ModPerl::Util ();
use Apache2::RequestRec ();
use Apache2::RequestIO ();
use Apache2::RequestUtil ();
use Apache2::ServerRec qw(warn);
use Apache2::ServerUtil ();
use Apache2::Connection ();
use Apache2::Log ();
use APR::Table ();
use ModPerl::Registry ();
use Apache2::Reload ();
use Apache2::Const -compile => ':common';
use APR::Const -compile => ':common';

# App specific stuff
use CGI ();
use Apache::DBI;
use DBD::Oracle;
use Apache2::SizeLimit;
$Apache2::SizeLimit::MAX_PROCESS_SIZE  = 400000; # 400 MB

1;
  </Perl>

  RewriteEngine on

  # Send graph request URLs to the GraphTool server
  RewriteRule ^/phedex/graphs(.*)$ http://localhost:7102/phedex/graphs$1 [P,L]

  # Static files on AFS
  RewriteRule ^/phedex/((DBPerfData|Documents|Files|WebMirror).*) /afs/cern.ch/cms/aprom/phedex/$2 [L]
  <DirectoryMatch "^/afs/cern.ch/cms/aprom/phedex/(DBPerfData|Documents|Files|WebMirror)">
    Order allow,deny
    Allow from all
    Options Indexes FollowSymLinks
  </DirectoryMatch>

  # Static files on this host or direct accesses to scripts
  RewriteRule ^/phedex/(access.*|cgi-bin/.*|[^/]+\.[^/]+)$ @PHEDEX_ROOT@/Documentation/WebSite/$1 [L]

  # Everything else goes to access25, our main website program
  RewriteRule ^/phedex(.*)$ @PHEDEX_ROOT@/Documentation/WebSite/access25$1 [L]
  <Directory @PHEDEX_ROOT@/Documentation/WebSite >
     Order allow,deny
     Allow from all

    <FilesMatch "access25">
      Options +ExecCGI
      SetHandler perl-script
      PerlResponseHandler ModPerl::Registry
      PerlOptions +ParseHeaders
      SetOutputFilter DEFLATE

      SetEnv PHEDEX_SERVER_CONFIG @PHEDEX_ROOT@/Documentation/WebConfig/phedexweb-app.conf
    </FilesMatch>
  </Directory>

</VirtualHost>

# Debug settings
#PerlSetVar StatusOptionsAll On
#PerlSetVar StatusTerse On
#PerlSetVar StatusTerseSize On
#PerlSetVar StatusTerseSizeMainSummary On
#PerlModule Apache2::Status
#PerlModule B::TerseSize

#<Location /perl-status>
#  SetHandler perl-script
#  PerlHandler Apache2::Status
#  order deny,allow
#  allow from all
#</Location>
