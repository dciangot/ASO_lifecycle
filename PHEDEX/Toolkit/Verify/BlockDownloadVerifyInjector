#! /usr/bin/env perl

##H
##H This agent looks for blocks to inject in the verification queue
##H See https://twiki.cern.ch/twiki/bin/view/CMS/BlockDownloadVerify for
##H details
##H
##H Usage:
##H   BlockDownloadVerifyInjector
##H      -db FILE[:SECTION] [-log OUT]
##H      -nodes NODE
##H      -dropbox DROPDIR
##H      -interval SECONDS
##H
##H -db            database connection configuration parameter file.
##H -log           where to redirect logging information.
##H -nodes         node this agent is running on
##H -dropbox       directory for the drops (optional)
##H -interval      age of transfers to qualify for needing checking
##H

my $debug_me = 1;

######################################################################
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::BlockConsistency::Injector::Agent;

&GetOptions ("state=s"      => \$args{DROPDIR},
	     "log=s"        => \$args{LOGFILE},
	     "db=s"         => \$args{DBCONFIG},
	     "label=s"      => \$args{LABEL},
	     "use_srm"      => \$args{USE_SRM},
	     "interval=s"   => \$args{CHECK_INTERVAL},
	     "nodes=s"      => sub { push(@{$args{NODES}}, split(/,/, $_[1])) },
             "ignore=s"     => sub { push(@{$args{IGNORE_NODES}}, split(/,/, $_[1])) },
             "accept=s"     => sub { push(@{$args{ACCEPT_NODES}}, split(/,/, $_[1])) },
	     "help|h"	    => sub { &usage() },
	    );

foreach ( keys %args ) { delete $args{$_} unless defined $args{$_}; }
my $agent = PHEDEX::BlockConsistency::Injector::Agent->new(%args, @ARGV);
POE::Kernel->run();
print "POE kernel has ended, now I shoot myself\n";
exit 0;
