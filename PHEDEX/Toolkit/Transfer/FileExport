#!/usr/bin/env perl

##H Produce transfer file names (TURLs) for exported files.
##H
##H This agent generates the export file name for outbound file
##H transfers.  It monitors the database for wanted or staged
##H files that do not yet have a transfer name, and generates
##H one.  The site storage map catalogue is used to generate
##H the export names for the files.
##H
##H Usage:
##H   FilePFNExport
##H      -state DIRECTORY -nodes PATTERN[,PATTERN...]
##H      -db FILE[:SECTION] [-log OUT]
##H      [-ignore NODE[,NODE...]] [-accept NODE[,NODE...]]
##H      -protocols PROTO[,PROTO...] -storagemap PATH
##H
##H -state       agent state directory
##H -nodes       patterns for the node names for which this agent runs
##H -db          database connection configuration parameter file
##H -log         where to redirect logging information
##H -ignore      comma-separated list of nodes to ignore transfers from
##H -accept      comma-separated list of nodes to accept transfers from
##H -protocols   comma-separated list of protocols to accept
##H -storagemap  storage mapping catalogue

######################################################################

my %args;
use Getopt::Long;
use PHEDEX::Core::Help;
use PHEDEX::File::Export::Agent;

&GetOptions ("state=s"     => \$args{DROPDIR},
	     "log=s"       => \$args{LOGFILE},
             "db=s"        => \$args{DBCONFIG},
             "nodes=s"     => sub { push(@{$args{NODES}}, split(/,/, $_[1])) },
             "ignore=s"    => sub { push(@{$args{IGNORE_NODES}}, split(/,/, $_[1])) },
             "accept=s"    => sub { push(@{$args{ACCEPT_NODES}}, split(/,/, $_[1])) },
             "protocols=s" => sub { push(@{$args{PROTOCOLS}}, split(/,/, $_[1])) },
	     "storagemap=s"=> \$args{STORAGEMAP},
	     "help|h"      => sub { &usage() });


if (!$args{DROPDIR} || !$args{NODES} || !$args{DBCONFIG}
    || !$args{STORAGEMAP} || !$args{PROTOCOLS})
{
    die "Insufficient parameters, use -h for help.\n";
}

my $agent = PHEDEX::File::Export::Agent->new(%args,@ARGV);
POE::Kernel->run();
print "POE kernel has ended, now I shoot myself\n";
exit 0;
